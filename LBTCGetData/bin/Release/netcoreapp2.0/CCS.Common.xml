<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CCS.Common</name>
    </assembly>
    <members>
        <member name="M:Pool.Common.Cache.ICacheService.Exists(System.String)">
            <summary>
            验证缓存项是否存在
            </summary>
            <param name="key">缓存Key</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.ICacheService.ExistsAsync(System.String,System.Int32)">
            <summary>
            验证缓存项是否存在（异步方式）         
            </summary>
            <param name="key">缓存Key</param>
            <param name="sleep">睡眠时长</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.ICacheService.Add(System.String,System.Object)">
            <summary>
            添加缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">缓存Value</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.ICacheService.AddAsync(System.String,System.Object,System.Int32)">
            <summary>
            添加缓存（异步方式）
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">缓存Value</param>
            <param name="sleep">睡眠时长</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.ICacheService.Add(System.String,System.Object,System.TimeSpan,System.TimeSpan)">
            <summary>
            添加缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">缓存Value</param>
            <param name="expiresSliding">滑动过期时长（如果在过期时间内有操作，则以当前时间点延长过期时间）</param>
            <param name="expiressAbsoulte">绝对过期时长</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.ICacheService.AddAsync(System.String,System.Object,System.TimeSpan,System.TimeSpan,System.Int32)">
            <summary>
            添加缓存（异步方式）
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">缓存Value</param>
            <param name="expiresSliding">滑动过期时长（如果在过期时间内有操作，则以当前时间点延长过期时间）</param>
            <param name="expiressAbsoulte">绝对过期时长</param>
            <param name="sleep">睡眠时长</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.ICacheService.Add(System.String,System.Object,System.TimeSpan,System.Boolean)">
            <summary>
            添加缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">缓存Value</param>
            <param name="expiresIn">缓存时长</param>
            <param name="isSliding">是否滑动过期（如果在过期时间内有操作，则以当前时间点延长过期时间）</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.ICacheService.AddAsync(System.String,System.Object,System.TimeSpan,System.Boolean,System.Int32)">
            <summary>
            添加缓存（异步方式）
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">缓存Value</param>
            <param name="expiresIn">缓存时长</param>
            <param name="isSliding">是否滑动过期（如果在过期时间内有操作，则以当前时间点延长过期时间）</param>
            <param name="sleep">睡眠时长</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.ICacheService.Remove(System.String)">
            <summary>
            删除缓存
            </summary>
            <param name="key">缓存Key</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.ICacheService.RemoveAsync(System.String,System.Int32)">
            <summary>
            删除缓存（异步方式）
            </summary>
            <param name="key">缓存Key</param>
            <param name="sleep">睡眠时长</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.ICacheService.RemoveAll(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            批量删除缓存
            </summary>
            <param name="keys">缓存Key集合</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.ICacheService.RemoveAllAsync(System.Collections.Generic.IEnumerable{System.String},System.Int32)">
            <summary>
            批量删除缓存（异步方式）
            </summary>
            <param name="keys">缓存Key集合</param>
            <param name="sleep">睡眠时长</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.ICacheService.Get``1(System.String)">
            <summary>
            获取缓存
            </summary>
            <param name="key">缓存Key</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.ICacheService.GetAsync``1(System.String,System.Int32)">
            <summary>
            获取缓存（异步方式）
            </summary>
            <param name="key">缓存Key</param>
            <param name="sleep">睡眠时长</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.ICacheService.Get(System.String)">
            <summary>
            获取缓存
            </summary>
            <param name="key">缓存Key</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.ICacheService.GetAsync(System.String,System.Int32)">
            <summary>
            获取缓存（异步方式）
            </summary>
            <param name="key">缓存Key</param>
            <param name="sleep">睡眠时长</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.ICacheService.GetAll(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            获取缓存集合
            </summary>
            <param name="keys">缓存Key集合</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.ICacheService.GetAllAsync(System.Collections.Generic.IEnumerable{System.String},System.Int32)">
            <summary>
            获取缓存集合（异步方式）
            </summary>
            <param name="keys">缓存Key集合</param>
            <param name="sleep">睡眠时长</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.ICacheService.Replace(System.String,System.Object)">
            <summary>
            修改缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">新的缓存Value</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.ICacheService.ReplaceAsync(System.String,System.Object,System.Int32)">
            <summary>
            修改缓存（异步方式）
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">新的缓存Value</param>
            <param name="sleep">睡眠时长</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.ICacheService.Replace(System.String,System.Object,System.TimeSpan,System.TimeSpan)">
            <summary>
            修改缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">新的缓存Value</param>
            <param name="expiresSliding">滑动过期时长（如果在过期时间内有操作，则以当前时间点延长过期时间）</param>
            <param name="expiressAbsoulte">绝对过期时长</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.ICacheService.ReplaceAsync(System.String,System.Object,System.TimeSpan,System.TimeSpan,System.Int32)">
            <summary>
            修改缓存（异步方式）
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">新的缓存Value</param>
            <param name="expiresSliding">滑动过期时长（如果在过期时间内有操作，则以当前时间点延长过期时间）</param>
            <param name="expiressAbsoulte">绝对过期时长</param>
            <param name="sleep">睡眠时长</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.ICacheService.Replace(System.String,System.Object,System.TimeSpan,System.Boolean)">
            <summary>
            修改缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">新的缓存Value</param>
            <param name="expiresIn">缓存时长</param>
            <param name="isSliding">是否滑动过期（如果在过期时间内有操作，则以当前时间点延长过期时间）</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.ICacheService.ReplaceAsync(System.String,System.Object,System.TimeSpan,System.Boolean,System.Int32)">
            <summary>
            修改缓存（异步方式）
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">新的缓存Value</param>
            <param name="expiresIn">缓存时长</param>
            <param name="isSliding">是否滑动过期（如果在过期时间内有操作，则以当前时间点延长过期时间）</param>
            <param name="sleep">睡眠时长</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.MemoryCacheService.Exists(System.String)">
            <summary>
            验证缓存项是否存在
            </summary>
            <param name="key">缓存Key</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.MemoryCacheService.ExistsAsync(System.String,System.Int32)">
            <summary>
            验证缓存项是否存在
            </summary>
            <param name="key">缓存Key</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.MemoryCacheService.Add(System.String,System.Object)">
            <summary>
            添加缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">缓存Value</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.MemoryCacheService.AddAsync(System.String,System.Object,System.Int32)">
            <summary>
            添加缓存（异步方式）
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">缓存Value</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.MemoryCacheService.Add(System.String,System.Object,System.TimeSpan,System.TimeSpan)">
            <summary>
            添加缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">缓存Value</param>
            <param name="expiresSliding">滑动过期时长（如果在过期时间内有操作，则以当前时间点延长过期时间）</param>
            <param name="expiressAbsoulte">绝对过期时长</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.MemoryCacheService.AddAsync(System.String,System.Object,System.TimeSpan,System.TimeSpan,System.Int32)">
            <summary>
            添加缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">缓存Value</param>
            <param name="expiresSliding">滑动过期时长（如果在过期时间内有操作，则以当前时间点延长过期时间）</param>
            <param name="expiressAbsoulte">绝对过期时长</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.MemoryCacheService.Add(System.String,System.Object,System.TimeSpan,System.Boolean)">
            <summary>
            添加缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">缓存Value</param>
            <param name="expiresIn">缓存时长</param>
            <param name="isSliding">是否滑动过期（如果在过期时间内有操作，则以当前时间点延长过期时间）</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.MemoryCacheService.AddAsync(System.String,System.Object,System.TimeSpan,System.Boolean,System.Int32)">
            <summary>
            添加缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">缓存Value</param>
            <param name="expiresIn">缓存时长</param>
            <param name="isSliding">是否滑动过期（如果在过期时间内有操作，则以当前时间点延长过期时间）</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.MemoryCacheService.Remove(System.String)">
            <summary>
            删除缓存
            </summary>
            <param name="key">缓存Key</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.MemoryCacheService.RemoveAsync(System.String,System.Int32)">
            <summary>
            删除缓存（异步方式）
            </summary>
            <param name="key">缓存Key</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.MemoryCacheService.RemoveAll(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            批量删除缓存
            </summary>
            <param name="keys">缓存Key集合</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.MemoryCacheService.RemoveAllAsync(System.Collections.Generic.IEnumerable{System.String},System.Int32)">
            <summary>
            批量删除缓存（异步方式）
            </summary>
            <param name="keys">缓存Key集合</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.MemoryCacheService.Get``1(System.String)">
            <summary>
            获取缓存
            </summary>
            <param name="key">缓存Key</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.MemoryCacheService.GetAsync``1(System.String,System.Int32)">
            <summary>
            获取缓存（异步方式）
            </summary>
            <param name="key">缓存Key</param>
            <param name="sleep">睡眠时长</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.MemoryCacheService.Get(System.String)">
            <summary>
            获取缓存
            </summary>
            <param name="key">缓存Key</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.MemoryCacheService.GetAsync(System.String,System.Int32)">
            <summary>
            获取缓存（异步方式）
            </summary>
            <param name="key">缓存Key</param>
            <param name="sleep">睡眠时长</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.MemoryCacheService.GetAll(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            获取缓存集合
            </summary>
            <param name="keys">缓存Key集合</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.MemoryCacheService.GetAllAsync(System.Collections.Generic.IEnumerable{System.String},System.Int32)">
            <summary>
            获取缓存集合（异步方式）
            </summary>
            <param name="keys">缓存Key集合</param>
            <param name="sleep">睡眠时长</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.MemoryCacheService.Replace(System.String,System.Object)">
            <summary>
            修改缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">新的缓存Value</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.MemoryCacheService.ReplaceAsync(System.String,System.Object,System.Int32)">
            <summary>
            修改缓存（异步方式）
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">新的缓存Value</param>
            <param name="sleep">睡眠时长</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.MemoryCacheService.Replace(System.String,System.Object,System.TimeSpan,System.TimeSpan)">
            <summary>
            修改缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">新的缓存Value</param>
            <param name="expiresSliding">滑动过期时长（如果在过期时间内有操作，则以当前时间点延长过期时间）</param>
            <param name="expiressAbsoulte">绝对过期时长</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.MemoryCacheService.ReplaceAsync(System.String,System.Object,System.TimeSpan,System.TimeSpan,System.Int32)">
            <summary>
            修改缓存（异步方式）
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">新的缓存Value</param>
            <param name="expiresSliding">滑动过期时长（如果在过期时间内有操作，则以当前时间点延长过期时间）</param>
            <param name="expiressAbsoulte">绝对过期时长</param>
            <param name="sleep">睡眠时长</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.MemoryCacheService.Replace(System.String,System.Object,System.TimeSpan,System.Boolean)">
            <summary>
            修改缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">新的缓存Value</param>
            <param name="expiresIn">缓存时长</param>
            <param name="isSliding">是否滑动过期（如果在过期时间内有操作，则以当前时间点延长过期时间）</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.MemoryCacheService.ReplaceAsync(System.String,System.Object,System.TimeSpan,System.Boolean,System.Int32)">
            <summary>
            修改缓存（异步方式）
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">新的缓存Value</param>
            <param name="expiresIn">缓存时长</param>
            <param name="isSliding">是否滑动过期（如果在过期时间内有操作，则以当前时间点延长过期时间）</param>
            <param name="sleep">睡眠时长</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.RedisCacheService.Exists(System.String)">
            <summary>
            验证缓存项是否存在
            </summary>
            <param name="key">缓存Key</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.RedisCacheService.ExistsAsync(System.String,System.Int32)">
            <summary>
            验证缓存项是否存在
            </summary>
            <param name="key">缓存Key</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.RedisCacheService.Add(System.String,System.Object)">
            <summary>
            添加缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">缓存Value</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.RedisCacheService.AddAsync(System.String,System.Object,System.Int32)">
            <summary>
            添加缓存（异步方式）
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">缓存Value</param>
            <param name="sleep">睡眠时长</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.RedisCacheService.Add(System.String,System.Object,System.TimeSpan,System.TimeSpan)">
            <summary>
            添加缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">缓存Value</param>
            <param name="expiresSliding">滑动过期时长（如果在过期时间内有操作，则以当前时间点延长过期时间,Redis中无效）</param>
            <param name="expiressAbsoulte">绝对过期时长</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.RedisCacheService.AddAsync(System.String,System.Object,System.TimeSpan,System.TimeSpan,System.Int32)">
            <summary>
            添加缓存（异步方式）
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">缓存Value</param>
            <param name="expiresSliding">滑动过期时长（如果在过期时间内有操作，则以当前时间点延长过期时间）</param>
            <param name="expiressAbsoulte">绝对过期时长</param>
            <param name="sleep">睡眠时长</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.RedisCacheService.Add(System.String,System.Object,System.TimeSpan,System.Boolean)">
            <summary>
            添加缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">缓存Value</param>
            <param name="expiresIn">缓存时长</param>
            <param name="isSliding">是否滑动过期（如果在过期时间内有操作，则以当前时间点延长过期时间,Redis中无效）</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.RedisCacheService.AddAsync(System.String,System.Object,System.TimeSpan,System.Boolean,System.Int32)">
            <summary>
            添加缓存（异步方式）
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">缓存Value</param>
            <param name="expiresIn">缓存时长</param>
            <param name="isSliding">是否滑动过期（如果在过期时间内有操作，则以当前时间点延长过期时间）</param>
            <param name="sleep">睡眠时长</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.RedisCacheService.Remove(System.String)">
            <summary>
            删除缓存
            </summary>
            <param name="key">缓存Key</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.RedisCacheService.RemoveAsync(System.String,System.Int32)">
            <summary>
            删除缓存（异步方式）
            </summary>
            <param name="key">缓存Key</param>
            <param name="sleep">睡眠时长</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.RedisCacheService.RemoveAll(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            批量删除缓存
            </summary>
            <param name="keys">缓存Key集合</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.RedisCacheService.RemoveAllAsync(System.Collections.Generic.IEnumerable{System.String},System.Int32)">
            <summary>
            批量删除缓存（异步方式）
            </summary>
            <param name="keys">缓存Key集合</param>
            <param name="sleep">睡眠时长</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.RedisCacheService.Get``1(System.String)">
            <summary>
            获取缓存
            </summary>
            <param name="key">缓存Key</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.RedisCacheService.GetAsync``1(System.String,System.Int32)">
            <summary>
            获取缓存（异步方式）
            </summary>
            <param name="key">缓存Key</param>
            <param name="sleep">睡眠时长</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.RedisCacheService.Get(System.String)">
            <summary>
            获取缓存
            </summary>
            <param name="key">缓存Key</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.RedisCacheService.GetAsync(System.String,System.Int32)">
            <summary>
            获取缓存（异步方式）
            </summary>
            <param name="key">缓存Key</param>
            <param name="sleep">睡眠时长</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.RedisCacheService.GetAll(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            获取缓存集合
            </summary>
            <param name="keys">缓存Key集合</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.RedisCacheService.GetAllAsync(System.Collections.Generic.IEnumerable{System.String},System.Int32)">
            <summary>
            获取缓存集合（异步方式）
            </summary>
            <param name="keys">缓存Key集合</param>
            <param name="sleep">睡眠时长</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.RedisCacheService.Replace(System.String,System.Object)">
            <summary>
            修改缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">新的缓存Value</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.RedisCacheService.ReplaceAsync(System.String,System.Object,System.Int32)">
            <summary>
            修改缓存（异步方式）
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">新的缓存Value</param>
            <param name="sleep">睡眠时长</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.RedisCacheService.Replace(System.String,System.Object,System.TimeSpan,System.TimeSpan)">
            <summary>
            修改缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">新的缓存Value</param>
            <param name="expiresSliding">滑动过期时长（如果在过期时间内有操作，则以当前时间点延长过期时间）</param>
            <param name="expiressAbsoulte">绝对过期时长</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.RedisCacheService.ReplaceAsync(System.String,System.Object,System.TimeSpan,System.TimeSpan,System.Int32)">
            <summary>
            修改缓存（异步方式）
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">新的缓存Value</param>
            <param name="expiresSliding">滑动过期时长（如果在过期时间内有操作，则以当前时间点延长过期时间）</param>
            <param name="expiressAbsoulte">绝对过期时长</param>
            <param name="sleep">睡眠时长</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.RedisCacheService.Replace(System.String,System.Object,System.TimeSpan,System.Boolean)">
            <summary>
            修改缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">新的缓存Value</param>
            <param name="expiresIn">缓存时长</param>
            <param name="isSliding">是否滑动过期（如果在过期时间内有操作，则以当前时间点延长过期时间）</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Cache.RedisCacheService.ReplaceAsync(System.String,System.Object,System.TimeSpan,System.Boolean,System.Int32)">
            <summary>
            修改缓存（异步方式）
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">新的缓存Value</param>
            <param name="expiresIn">缓存时长</param>
            <param name="isSliding">是否滑动过期（如果在过期时间内有操作，则以当前时间点延长过期时间）</param>
            <param name="sleep">睡眠时长</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Mails.SendMail(System.Boolean,System.String,System.String[],System.String,System.String,Pool.Common.Mails.MailConfig)">
            <summary>
            发送邮件
            </summary>
            <param name="isattfile">是否上传附件</param>
            <param name="attfile">附件地址</param>
            <param name="mailarr">发送对象集合</param>
            <param name="mailtitle">邮件标题</param>
            <param name="maildesc">邮件内容</param>
            <param name="configs">邮件配置</param>
            <returns></returns>
        </member>
        <member name="P:Pool.Common.Mails.MailConfig.MailServer">
            <summary>
            邮箱服务器
            </summary>
        </member>
        <member name="P:Pool.Common.Mails.MailConfig.MailPoint">
            <summary>
            邮箱服务器端口
            </summary>
        </member>
        <member name="P:Pool.Common.Mails.MailConfig.MailFrom">
            <summary>
            发件箱
            </summary>
        </member>
        <member name="P:Pool.Common.Mails.MailConfig.MailUser">
            <summary>
            账号
            </summary>
        </member>
        <member name="P:Pool.Common.Mails.MailConfig.MailPassWord">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:Pool.Common.Mails.MailConfig.MailCCs">
            <summary>
            抄送邮箱列表
            </summary>
        </member>
        <member name="P:Pool.Common.Strings.ServerTimeZone">
            <summary>
            本地时间与标准时间时差（小时）
            </summary>
        </member>
        <member name="M:Pool.Common.Strings.ChartTime(System.Int32,System.Int32)">
            <summary>
            以周为单位列出某一年季度
            </summary>
            <returns>The time.</returns>
            <param name="year">Year.</param>
            <param name="quarter">Quarter.</param>
        </member>
        <member name="M:Pool.Common.Strings.LeftBytes(System.String,System.Int32)">
            <summary>
            以二进制为单位取前几位
            </summary>
        </member>
        <member name="M:Pool.Common.Strings.ArrayToSqlString(System.String[])">
            <summary>
            组合成SQL IN语句使用字符串
            </summary>
            <returns>The to sql string.</returns>
            <param name="arr">Arr.</param>
        </member>
        <member name="M:Pool.Common.Strings.ZeroArray(System.Int32)">
            <summary>
            报表需要，根据数组长度生成0.0,0.0.......
            </summary>
            <returns>The array.</returns>
            <param name="arrlong">Arrlong.</param>
        </member>
        <member name="M:Pool.Common.Strings.PPMValue(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            计算预估不良率
            </summary>
        </member>
        <member name="M:Pool.Common.Strings.GetNormSDistValue(System.Double)">
            <summary>
            计算标准正态数
            </summary>
            <param name="NormSDistValue">需要计算标准正态数值</param>
            <returns>返回计算结果</returns>
        </member>
        <member name="M:Pool.Common.Strings.f(System.Double)">
            <summary>
            计算X的次方(jisuanXdecifang)
            </summary>
            <param name="x">需要算次方的值(xuyaosuancifangde值)</param>
            <returns>返回计算结果(fanhuijisuanjieguo)</returns>
        </member>
        <member name="M:Pool.Common.Strings.GetDescription(System.Enum,System.Boolean)">
            <summary>
            扩展方法，获得枚举的Description
            </summary>
            <param name="value">枚举值</param>
            <param name="nameInstend">当枚举没有定义DescriptionAttribute,是否用枚举名代替，默认使用</param>
            <returns>枚举的Description</returns>
        </member>
        <member name="M:Pool.Common.Strings.EncodeBase64(System.Text.Encoding,System.String)">
            <summary>
            Base64加密
            </summary>
            <param name="codeName">加密采用的编码方式</param>
            <param name="source">待加密的明文</param>
            <returns></returns>
        </member>
        <member name="M:Pool.Common.Strings.EncodeBase64(System.String)">
            <summary>
            Base64加密，采用utf8编码方式加密
            </summary>
            <param name="source">待加密的明文</param>
            <returns>加密后的字符串</returns>
        </member>
        <member name="M:Pool.Common.Strings.DecodeBase64(System.Text.Encoding,System.String)">
            <summary>
            Base64解密
            </summary>
            <param name="codeName">解密采用的编码方式，注意和加密时采用的方式一致</param>
            <param name="result">待解密的密文</param>
            <returns>解密后的字符串</returns>
        </member>
        <member name="M:Pool.Common.Strings.DecodeBase64(System.String)">
            <summary>
            Base64解密，采用utf8编码方式解密
            </summary>
            <param name="result">待解密的密文</param>
            <returns>解密后的字符串</returns>
        </member>
        <member name="M:Pool.Common.Strings.ConvertIntDateTime(System.Double)">
            <summary>
            将Unix时间戳转换为DateTime类型时间
            </summary>
            <param name="d">double 型数字</param>
            <returns>DateTime</returns>
        </member>
        <member name="M:Pool.Common.Strings.ConvertDateTimeInt(System.DateTime)">
            <summary>
            将c# DateTime时间格式转换为Unix时间戳格式
            </summary>
            <param name="time">时间</param>
            <returns>double</returns>
        </member>
    </members>
</doc>
